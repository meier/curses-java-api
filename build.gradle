/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'meier3' at '6/8/15 10:22 AM' with Gradle 2.4
 *
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

def mainClass  = "jcurses.tests.Test"
def bundleDescription = "Java API for the ncurses package"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

task incrementBuildNumber  {
  description 'increment the artifactBuildNumber in the gradle.properties file, and update the version accordingly'
  version = artifactMajorVersion + "-" + artifactReleaseNumber + "-b" + artifactBuildNumber
}

incrementBuildNumber  << {
  //update the next version string, and persist it (save it back) during execution stage
  Properties props = new Properties()
  File propsFile = new File('gradle.properties')
  props.load(propsFile.newDataInputStream())
  Integer nextbuildnum = (((props.getProperty('artifactBuildNumber')) as BigDecimal) + 1 )
  // save it for use next time
  props.setProperty('artifactBuildNumber', nextbuildnum.toString())
  props.store(propsFile.newWriter(), null)
  props.load(propsFile.newDataInputStream())
  version = artifactMajorVersion + "-" + artifactReleaseNumber + "-b" + nextbuildnum.toString()
}

// on every jar task, increment the build number, and fill in the manifest
jar {
  dependsOn incrementBuildNumber
    doFirst {
        manifest {
              attributes('Gradle-Version':  gradle.gradleVersion,
                'Built-JDK': System.getProperty('java.version'),
                 'Built-By':  System.getProperty('user.name'),
               "Main-Class" :"${mainClass}",
                "Implementation-Vendor"  : "Lawrence Livermore National Laboratory",
                "Implementation-Title" :"${rootProject.name}",
                "Implementation-Version" : version, 
                "Bundle-License" : "GNU General Public License, version 2",
              "Bundle-Description" : "${bundleDescription}",
                "Built-Date" : new Date())               
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes){
    classifier = 'sources'
    from sourceSets.main.allSource
        doFirst {
        manifest {
              attributes('Gradle-Version':  gradle.gradleVersion,
                'Built-JDK': System.getProperty('java.version'),
                 'Built-By':  System.getProperty('user.name'),
                "Implementation-Vendor"  : "Lawrence Livermore National Laboratory",
                "Implementation-Title" :"${rootProject.name}",
                "Implementation-Version" : version, 
                "Bundle-License" : "GNU General Public License, version 2",
              "Bundle-Description" : "${bundleDescription}",
                "Built-Date" : new Date())               
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
       doFirst {
        manifest {
               attributes('Gradle-Version':  gradle.gradleVersion,
                'Built-JDK': System.getProperty('java.version'),
                 'Built-By':  System.getProperty('user.name'),
                "Implementation-Vendor"  : "Lawrence Livermore National Laboratory",
                "Implementation-Title" :"${rootProject.name}",
                "Implementation-Version" : version, 
                "Bundle-License" : "GNU General Public License, version 2",
              "Bundle-Description" : "${bundleDescription}",
                "Built-Date" : new Date())               
        }
    }
}

task fatJar(type: Jar, dependsOn: classes) {
  classifier = 'all'
 dependsOn incrementBuildNumber
    doFirst {
        manifest {
              attributes('Gradle-Version':  gradle.gradleVersion,
                'Built-JDK': System.getProperty('java.version'),
                 'Built-By':  System.getProperty('user.name'),
               "Main-Class" :"${mainClass}",
                "Implementation-Vendor"  : "Lawrence Livermore National Laboratory",
                "Implementation-Title" :"${rootProject.name}",
                "Implementation-Version" : version, 
                "Bundle-License" : "GNU General Public License, version 2",
               "Bundle-Description" : "${bundleDescription}",
                "Built-Date" : new Date())               
        }
    }
    from sourceSets.main.allSource
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives fatJar
}